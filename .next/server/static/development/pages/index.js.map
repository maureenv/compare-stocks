{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/meta.js","webpack:///./pages/index.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"cheerio\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"next/head\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-chartjs-2\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React from 'react'\nimport NextHead from 'next/head'\nimport { string } from 'prop-types'\n//import favicon from '../_res/images/favicon.ico'\n\nconst defaultDescription = ''\nconst defaultOGURL = ''\nconst defaultOGImage = ''\n\nconst Meta = props => (\n  <NextHead>\n    <meta charSet=\"UTF-8\" />\n    <title>Compare Stocks</title>\n    <meta\n      name=\"description\"\n      content={props.description || defaultDescription}\n    />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <link rel=\"icon\" sizes=\"192x192\" href=\"/static/touch-icon.png\" />\n    <link rel=\"apple-touch-icon\" href=\"/static/touch-icon.png\" />\n    {/*<link rel=\"mask-icon\" href=\"/static/favicon-mask.svg\" color=\"#49B882\" />*/}\n    {/*<link rel=\"icon\" href={ favicon } />*/}\n    <meta property=\"og:url\" content={props.url || defaultOGURL} />\n    <meta property=\"og:title\" content={props.title || ''} />\n    <meta\n      property=\"og:description\"\n      content={props.description || defaultDescription}\n    />\n    <meta name=\"twitter:site\" content={props.url || defaultOGURL} />\n    <meta name=\"twitter:card\" content=\"summary_large_image\" />\n    <meta name=\"twitter:image\" content={props.ogImage || defaultOGImage} />\n    <meta property=\"og:image\" content={props.ogImage || defaultOGImage} />\n    <meta property=\"og:image:width\" content=\"1200\" />\n    <meta property=\"og:image:height\" content=\"630\" />\n  </NextHead>\n)\n\nMeta.propTypes = {\n  title: string,\n  description: string,\n  url: string,\n  ogImage: string\n}\n\nexport default Meta\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport fetch from 'isomorphic-unfetch'\nimport cheerio from 'cheerio'\nimport Meta from '../components/meta'\nconst url = 'https://www.gurufocus.com/term/peg/AAPL/PEG-Ratio'\nvar proxyUrl = 'https://cors-anywhere.herokuapp.com/'\nimport { Line } from 'react-chartjs-2'\n\nconst chartData = {\n  labels: [],\n  datasets: [\n    {\n       label: 'Apple',\n       fill: false,\n       lineTension: 0.1,\n       backgroundColor: 'rgba(75,192,192,0.4)',\n       borderColor: 'rgba(75,192,192,1)',\n       borderCapStyle: 'butt',\n       borderDash: [],\n       borderDashOffset: 0.0,\n       borderJoinStyle: 'miter',\n       pointBorderColor: 'rgba(75,192,192,1)',\n       pointBackgroundColor: '#fff',\n       pointBorderWidth: 1,\n       pointHoverRadius: 5,\n       pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n       pointHoverBorderColor: 'rgba(220,220,220,1)',\n       pointHoverBorderWidth: 2,\n       pointRadius: 1,\n       pointHitRadius: 10,\n       data: [],\n     },\n     {\n       label: 'Microsoft',\n       fill: false,\n       lineTension: 0.1,\n       backgroundColor: 'rgba(75,192,192,0.4)',\n       borderColor: 'rgba(75,192,192,1)',\n       borderCapStyle: 'butt',\n       borderDash: [],\n       borderDashOffset: 0.0,\n       borderJoinStyle: 'miter',\n       pointBorderColor: 'rgba(75,192,192,1)',\n       pointBackgroundColor: '#fff',\n       pointBorderWidth: 1,\n       pointHoverRadius: 5,\n       pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n       pointHoverBorderColor: 'rgba(220,220,220,1)',\n       pointHoverBorderWidth: 2,\n       pointRadius: 1,\n       pointHitRadius: 10,\n       data: [],\n     },\n     {\n       label: 'Microsoft',\n       fill: false,\n       lineTension: 0.1,\n       backgroundColor: 'rgba(75,192,192,0.4)',\n       borderColor: 'rgba(75,192,192,1)',\n       borderCapStyle: 'butt',\n       borderDash: [],\n       borderDashOffset: 0.0,\n       borderJoinStyle: 'miter',\n       pointBorderColor: 'rgba(75,192,192,1)',\n       pointBackgroundColor: '#fff',\n       pointBorderWidth: 1,\n       pointHoverRadius: 5,\n       pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n       pointHoverBorderColor: 'rgba(220,220,220,1)',\n       pointHoverBorderWidth: 2,\n       pointRadius: 1,\n       pointHitRadius: 10,\n       data: [],\n   },\n   {\n     label: 'Microsoft',\n     fill: false,\n     lineTension: 0.1,\n     backgroundColor: 'rgba(75,192,192,0.4)',\n     borderColor: 'rgba(75,192,192,1)',\n     borderCapStyle: 'butt',\n     borderDash: [],\n     borderDashOffset: 0.0,\n     borderJoinStyle: 'miter',\n     pointBorderColor: 'rgba(75,192,192,1)',\n     pointBackgroundColor: '#fff',\n     pointBorderWidth: 1,\n     pointHoverRadius: 5,\n     pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n     pointHoverBorderColor: 'rgba(220,220,220,1)',\n     pointHoverBorderWidth: 2,\n     pointRadius: 1,\n     pointHitRadius: 10,\n     data: [],\n  }\n  ],\n}\n\nconst chartOptions = {\n  maintainAspectRatio: false,\n  elements: {\n    line: {\n      tension: 0.1,\n    },\n  },\n  legend: {\n    display: true,\n  },\n  scales: {\n    xAxes: [{\n      gridLines: {\n        display: false,\n      },\n    }],\n    yAxes: [{\n      ticks: {\n        maxTicksLimit: 5,\n        beginAtZero: true,\n      },\n    }],\n  },\n  tooltips: {\n    callbacks: {},\n  },\n}\n\nconst ChartContainer = styled.div`\n  height: 500px;\n  width: 100%;\n  margin-top: 50px;\n`\n\nconst HeroTitle = styled.h1`\n  color:red;\n  position: relative;\n  z-index: 1;\n  text-transform: uppercase;\n  font-size: 100px;\n  margin-bottom: -10px;\n  font-family: 'Anton', sans-serif;\n  text-shadow: -3px 0px 11px rgba(0,0,0,0.7);\n`\n\nconst Tbody = styled.tbody`\nborder-bottom: 1px solid gray;\n`\n\nconst OuterContainer = styled.div`\n  background: #f5f5f5;\n  width: 100%;\n  height: 100%;\n  border-radius: 4px;\n  max-width: 1200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 20px;\n`\n\nconst InnerContainer = styled.div`\n  padding: 20px;\n`\n\nconst Tr = styled.tr`\n  font-family: 'Roboto', sans-serif;\n  text-align: left;\n`\n\nconst Th = styled.th`\n  text-align: ${ props => props.left ? 'left' : 'right'};\n  padding: 10px 20px;\n  border-bottom: 1px solid #d6d6d6;\n  font-size: 13px;\n`\n\nclass Index extends Component {\n  state = {\n    stocks: {},\n    symbolList: []\n  }\n\n  componentWillMount() {\n    // ( async () => {\n    //   const res = await fetch('https://api.iextrading.com/1.0/stock/market/batch?symbols=aapl,msft&types=quote,stats,financials,company,earnings,chart&range=3m')\n    //   const data = await res.json()\n    //   const stocks = []\n    //   const array = Object.keys( data ).map( d => stocks.push( data[d] ))\n    //   this.setState({ stocks })\n    //   this.buildChartData( stocks )\n    // })()\n\n    fetch( proxyUrl + url )\n      .then( res => res.text() )\n      .then( (body ) => {\n        // comp_name\n        const test = cheerio.load(body)\n        //console.log(test('.comp_name font').text(), 'the test')\n\n        // test('.comp_name font').each(( index, element ) => {\n        //   console.log(element, 'the index')\n        // })\n      })\n  }\n\n  buildChartData = stocks => {\n    const labels = []\n    stocks[0].chart.map( c => labels.push( c.date ))\n    chartData.labels = labels\n    stocks.map(( s, i ) => {\n      const data = []\n      s.chart.map( c => data.push( c.close ))\n      chartData.datasets[i].data = data\n    })\n    this.setState({ chartData, chartOptions })\n  }\n\n  calculateDebtToEquity = stock => {\n    const shareholderEquity = stock.financials.financials[0].shareholderEquity\n    const totalDebt = stock.financials.financials[0].totalDebt\n    const debtToEquity = ( totalDebt / shareholderEquity ).toFixed( 2 )\n    return debtToEquity\n  }\n\n  calculateAssetTurnover = stock => {\n    const totalAssetsThisQuarter = stock.financials.financials[0].totalAssets\n    const totalAssetsLastQuarter = stock.financials.financials[1].totalAssets\n\n    const averageTotalAssets = ( totalAssetsThisQuarter + totalAssetsLastQuarter ) / 2\n    const assetTurnover = stock.financials.financials[0].totalRevenue / averageTotalAssets\n    return assetTurnover.toFixed( 2 )\n  }\n\n  calculatePayoutRatio = stock => {\n    const EPS = stock.earnings.earnings.reduce(( accumulator, currentValue ) => accumulator + currentValue.actualEPS, 0 )\n    const dividendRate = stock.stats.dividendRate\n\n    const payoutRatio = Math.floor( ( ( dividendRate / EPS ) * 100 ) * 100 ) / 100\n\n    return payoutRatio\n  }\n\n  setSymbol = ( index, event ) => {\n    ( async () => {\n      const text = event.target.value\n\n      const symbolList = [...this.state.symbolList]\n      symbolList[index] = text\n      this.setState({ symbolList })\n      // const res = await fetch(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${ text }&apikey=KT28GNBJ2ECP4SJ1`)\n      // const data = await res.json()\n      //console.log(data, 'the data from search')\n    })()\n  }\n\n  submit = () => {\n    ( async () => {\n      const { symbolList } = this.state\n      if ( symbolList.length > 0 ) {\n        const removeFromList = [undefined, null]\n        const filteredList = symbolList.filter( i => !removeFromList.includes( i ))\n        this.setState({ symbolList: filteredList })\n\n        const res = await fetch(`https://api.iextrading.com/1.0/stock/market/batch?symbols=${ filteredList.join(\",\")}&types=quote,stats,financials,company,earnings,chart&range=3m`)\n        const data = await res.json()\n        console.log(data, 'the data in submit')\n        const stocks = []\n        const array = Object.keys( data ).map( d => stocks.push( data[d] ))\n        this.setState({ stocks })\n        this.buildChartData( stocks )\n      }\n    })()\n  }\n\n  renderInputFields = () => {\n    return Array.from(new Array( 4 ), (val, i ) => {\n      return (\n        <Th key={ i }>\n          <input type=\"text\" placeholder=\"Enter stock symbol\" value={ this.state.symbolList[i] || '' } onChange={ e => this.setSymbol( i, e )}/>\n        </Th>\n      )\n    })\n  }\n\n  getValue = value => {\n    if ( typeof( value ) === \"string\" ) {\n      return value\n    }\n    else if ( value === 0 ) {\n      return 0\n    }\n    else if ( typeof( value ) === \"number\" ) {\n      //return Math.floor( value * 100 ) / 100\n      return value.toFixed(2)\n    }\n    else if ( value === null || value === undefined ) {\n      return 'N/A'\n    }\n    else {\n      return value\n    }\n  }\n\n  getCalculatedValues = functionName => {\n    const { stocks } = this.state\n    console.log(functionName, 'function name')\n    if ( stocks.length ) {\n      switch ( functionName ) {\n        case 'calculatePayoutRatio':\n          return (\n            stocks.map( s => <Th key={ s.company.companyName }>{ this.calculatePayoutRatio( s ) }%</Th> )\n          )\n          break\n        case 'calculateDebtToEquity':\n          return (\n            stocks.map( s => <Th key={ s.company.companyName }>{ this.calculateDebtToEquity( s )}% </Th> )\n          )\n          break\n        case 'calculateAssetTurnover':\n          return (\n            stocks.map( s => <Th key={ s.company.companyName }>{ this.calculateAssetTurnover( s ) }%</Th> )\n          )\n          break\n        default:\n          return\n      }\n    }\n    else {\n      return <Th colSpan=\"4\"/>\n    }\n  }\n\n  renderCalculatedRow = ( title, functionName ) => {\n    const { stocks } = this.state\n\n    return (\n      <Tr>\n        <Th left={ true }>{ title }</Th>\n        { this.getCalculatedValues( functionName ) }\n        { stocks.length < 4 && <Th colSpan={ 4 - stocks.length }/> }\n      </Tr>\n    )\n  }\n\n  renderTableRow = ( title, category, subcategory, isDollar, isPercent ) => {\n    const { stocks } = this.state\n\n    return (\n      <Tr>\n        <Th left={ true }>{ title }</Th>\n        { stocks.length ?\n          stocks.map( s =>\n            <Th key={ s.company.companyName }>\n              { isDollar && s[category][subcategory] !== null && '$' }\n              { this.getValue( s[category][subcategory] ) }\n              { isPercent && s[category][subcategory] !== null && '%'}\n            </Th> )\n            :\n            <Th colSpan=\"4\"/>\n        }\n        { stocks.length < 4 && <Th colSpan={ 4 - stocks.length }/> }\n      </Tr>\n    )\n  }\n\n  render() {\n    const {\n      stocks,\n      chartData,\n      chartOptions,\n    } = this.state\n\n    const tableHeaders = [\n      'Name',\n      'PEG',//\n      'Price To Earning (P/E)',\n      'Price to Sales (P/S)',\n      'Price to Book (P/B)',\n      'Dividend Yield',\n      'Dividend Payout',\n      'Return On Assets',\n      'Return On Equity',\n      'Profit Margin',\n      'Current Ratio', //\n      'Quick Ratio', //\n      'Debt to Equity',\n      'Interest Coverage',//\n      'Asset Turnover',//\n      'Inventory Turnover',//\n    ]\n    // still need: PEG, current ratio, quick ratio, intereset coverage, asset turnover, inventory turnover\n\n    return (\n      <OuterContainer>\n        <Meta />\n        <InnerContainer>\n          <table>\n            <tbody>\n              <Tr>\n                <Th left={ true }> Stock Symbol </Th>\n                { this.renderInputFields() }\n                <button onClick={ () => this.submit() }> Go </button>\n              </Tr>\n              { this.renderTableRow( 'Name', 'company', 'companyName', false, false )}\n              { this.renderTableRow( 'Sector', 'company', 'sector', false, false )}\n              { this.renderTableRow( 'Industry', 'company', 'industry', false, false )}\n              { this.renderTableRow( 'Latest Price', 'quote', 'latestPrice', true, false )}\n              { this.renderTableRow( 'Price to Earning (P/E)', 'quote', 'peRatio', false, true )}\n              { this.renderTableRow( 'Price to Sales (P/S)', 'stats', 'priceToSales', false, true )}\n              { this.renderTableRow( 'Price to Book (P/B)', 'stats', 'priceToBook', false, true )}\n              { this.renderTableRow( 'Dividend Yield', 'stats', 'dividendYield', false, true )}\n              { this.renderTableRow( 'Dividend Rate', 'stats', 'dividendRate', true, false )}\n              {/* THis is the amount receieved per year per stock (paid out quarterly)*/}\n              { this.renderCalculatedRow( 'Dividend Payout Ratio', 'calculatePayoutRatio' )}\n              { this.renderTableRow( 'Return On Assets', 'stats', 'returnOnAssets', false, true )}\n              { this.renderTableRow( 'Return On Equity', 'stats', 'returnOnEquity', false, true )}\n              { this.renderTableRow( 'Profit Margin', 'stats', 'profitMargin', false, true )}\n              { this.renderCalculatedRow( 'Debt to Equity', 'calculateDebtToEquity' )}\n              { this.renderCalculatedRow( 'Asset Turnover (Current Quarter)', 'calculateAssetTurnover' )}\n            </tbody>\n          </table>\n          <ChartContainer>\n            <Line data={ chartData } options={ chartOptions } redraw={ true }/>\n          </ChartContainer>\n        </InnerContainer>\n      </OuterContainer>\n    )\n  }\n}\n\n\nexport default Index\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"cheerio\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"next/head\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-chartjs-2\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxxBA;AACA;AA2BA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAlEA;AA0FA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAFA;AADA;AANA;AAaA;AACA;AADA;AAvBA;AA4BA;AAAA;AAAA;AAA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","sourceRoot":""}