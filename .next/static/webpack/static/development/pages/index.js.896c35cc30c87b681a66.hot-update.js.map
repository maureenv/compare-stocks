{"version":3,"file":"static/webpack/static/development/pages/index.js.896c35cc30c87b681a66.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport fetch from 'isomorphic-unfetch'\n\n\nconst HeroTitle = styled.h1`\n  color:red;\n  position: relative;\n  z-index: 1;\n  text-transform: uppercase;\n  font-size: 100px;\n  margin-bottom: -10px;\n  font-family: 'Anton', sans-serif;\n  text-shadow: -3px 0px 11px rgba(0,0,0,0.7);\n`\n\n\nclass Index extends Component {\n  state = {\n    stocks: {}\n  }\n\n  componentWillMount() {\n    ( async ()=> {\n      const res = await fetch('https://api.iextrading.com/1.0/stock/market/batch?symbols=aapl,zts&types=quote,stats,company,earnings,chart&range=3m')\n      const data = await res.json()\n      const stocks = []\n      const array = Object.keys( data ).map( d => stocks.push( data[d] ))\n      this.setState({ stocks })\n    })()\n  }\n\n  calculatePayoutRatio = stock => {\n    const EPS = stock.earnings.earnings.reduce(( accumulator, currentValue ) => accumulator + currentValue.actualEPS, 0 )\n    const dividendRate = stock.stats.dividendRate\n\n    const payoutRatio = ( dividendRate / EPS ) * 100\n\n    console.log(payoutRatio, 'payout ratio')\n  }\n\n  calculateTotal = orders => {\n    const total = orders.reduce(( accumulator, currentValue ) => accumulator + Number( currentValue.total ), 0 )\n     return total.toLocaleString()\n  }\n\n  render() {\n    const {\n      stocks\n    } = this.state\n    const tableHeaders = [\n      'Name',\n      'PEG',\n      'Price To Earning (P/E)',\n      'Price to Sales (P/S)',\n      'Price to Book (P/B)',\n      'Dividend Yield',\n      'Dividend Payout',\n      'Return On Assets',\n      'Return On Equity',\n      'Profit Margin',\n      'Current Ratio',\n      'Quick Ratio',\n      'Debt to Equity',\n      'Interest Coverage',\n      'Asset Turnover',\n      'Inventory Turnover',\n    ]\n\n    return (\n      <div>\n        <HeroTitle>Catssss!</HeroTitle>\n        <table>\n          <tr>\n            <th> Name </th>\n            { stocks.length && stocks.map( s => <th key={ s.company.companyName }>{ s.company.companyName }</th> ) }\n          </tr>\n          <tr>\n            <th> Sector </th>\n            { stocks.length && stocks.map( s => <th key={ s.company.companyName }>{ s.company.sector }</th> ) }\n          </tr>\n          <tr>\n            <th> Industry </th>\n            { stocks.length && stocks.map( s => <th key={ s.company.industry }>{ s.company.industry }</th> ) }\n          </tr>\n          <tr>\n            <th> Latest Price </th>\n            { stocks.length && stocks.map( s => <th key={ s.company.industry }>${ s.quote.latestPrice }</th> ) }\n          </tr>\n          <tr>\n            <th> Price to Earning (P/E) </th>\n            { stocks.length && stocks.map( s => <th key={ s.company.industry }>{ s.quote.peRatio }</th> ) }\n          </tr>\n          <tr>\n            <th> Price to Sales (P/S) </th>\n            { stocks.length && stocks.map( s => <th key={ s.company.industry }>{ s.stats.priceToSales.toFixed( 2 ) }</th> ) }\n          </tr>\n          <tr>\n            <th> Price to Book (P/B) </th>\n            { stocks.length && stocks.map( s => <th key={ s.company.industry }>{ s.stats.priceToBook }</th> ) }\n          </tr>\n          <tr>\n            <th> Dividend Yield </th>\n            { stocks.length && stocks.map( s => <th key={ s.company.industry }>{ s.stats.dividendYield.toFixed( 2 ) }%</th> ) }\n          </tr>\n          <tr>\n            <th> Dividend Rate </th>\n            { stocks.length && stocks.map( s => <th key={ s.company.industry }>${ s.stats.dividendRate.toFixed( 2 ) }</th> ) }\n            {/* THis is the amount receieved per year per stock (paid out quarterly)*/}\n          </tr>\n          <tr>\n            <th> Dividend Payout Ratio </th>\n            { stocks.length && stocks.map( s => <th key={ s.company.industry }>{ this.calculatePayoutRatio( s )}</th> ) }\n            {/* search company payout ratio */}\n          </tr>\n        </table>\n\n      </div>\n    )\n  }\n}\n\n\nexport default Index\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAWA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAvBA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;AAgBA;AAAA;AACA;AADA;AAIA;AAmBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAtGA;AACA;AAyGA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}